#!/usr/bin/env bash

# Prerequisites:
#   LastPass agent is running
# Required environment variables:
#   LASTPASS_USERNAME
# Arguments:
#   --key|-k, required: Path to secret, including folders (i.e. automation/hosts/foo/ssh_key)
#   --property|-p: One of (username|password|<FIELDNAME>). Defaults to retrieving the "notes" if not specified..

error=
key=
lpassArgs=()
positionalArgs=()

# after parsing our input arguments, validate them
# will echo any error(s), and return non-zero to indicate failures
function validate_args {
  if [[ -z $key ]]; then
    error="[validate_args] Missing required argument: --key (-k)"
    return 1
  fi

  if [[ ${#positionalArgs[@]} > 0 ]]; then
    error="[validate_args] Unexpected arguments: ${positionalArgs[@]}"
    return 1
  fi
}

# verifies that required arguments are passed in
function parse_args {
  # See: https://stackoverflow.com/a/14203146, space-separated option
  while [[ $# -gt 0 ]]; do
    case $1 in
      -k|--key)
        key="$2"
        shift # past argument
        shift # past value
        ;;
      -p|--property)
        property="$2"
        shift # past argument
        shift # past value
        ;;
      *)
        positionalArgs+=("$1") # save positional arg
        shift # past argument
        ;;
    esac
  done

  # normalze our key by changing all '/' characters to '\', except the final one, which matches the LastPass keys
  key=$(echo "${key%/*}" | sed 's#/#\\#g')/$(basename "$key")

  if [[ -z $property ]]; then
    lpassArgs+=(--notes)
  else
    if [[ "username" == $property ]]; then
      lpassArgs+=(--username)
    elif [[ "password" == $property ]]; then
      lpassArgs+=(--password)
    elif [[ "url" == $property ]]; then
      lpassArgs+=(--url)
    elif [[ "id" == $property ]]; then
      lpassArgs+=(--id)
    elif [[ "name" == $property ]]; then
      lpassArgs+=(--name)
    else
      lpassArgs+=("--field=${property}")
    fi
  fi

  validate_args
  return $?
}

# verifies that required environment variables are set
function check_environment {
  if [[ -z $LASTPASS_USERNAME ]]; then
    error="[check_environment] Missing required environment variable: LASTPASS_USERNAME"
    return 1
  fi
}

# verifies that the user has authenticated with LastPass
function check_authentication {
  if ! lpass status "${LASTPASS_USERNAME}" >/dev/null; then
    error="[check_authentication] You are not authenticated with LastPass. Run 'lpass login' first."
    return 1
  fi
}

if ! check_environment; then
  echo "${error}" 1>&2
  echo "Unable to fetch secret." 1>&2
  exit 1
fi

if ! parse_args "$@"; then
  echo "${error}" 1>&2
  echo "Unable to fetch secret." 1>&2
  exit 1
fi

if ! check_authentication; then
  echo "${error}" 1>&2
  echo "Unable to fetch secret." 1>&2
  exit 2
fi

if ! lpass show "${lpassArgs[@]}" "${key}"; then
  echo "Unable to fetch secret." 1>&2
  exit 3
fi
